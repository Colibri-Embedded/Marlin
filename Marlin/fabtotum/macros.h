#ifndef FABTOTUM_MACROS_H
#define FABTOTUM_MACROS_H

//FABtotum IO definition
#define RED_ON()	WRITE(RED_PIN,LOW)
#define RED_OFF()	WRITE(RED_PIN,HIGH)
#define GREEN_ON()	WRITE(GREEN_PIN,LOW)
#define GREEN_OFF()	WRITE(GREEN_PIN,HIGH)
#define BLUE_ON()	WRITE(BLUE_PIN,LOW)
#define BLUE_OFF()	WRITE(BLUE_PIN,HIGH)

#define MAX_PWM         127
#define PWM_SCALE (256/(MAX_PWM+1))

#define HOT_LED_ON()	WRITE(HOT_LED_PIN,HIGH)
#define HOT_LED_OFF()	WRITE(HOT_LED_PIN,LOW)

#define HEAD_LIGHT_ON()	WRITE(HEAD_LIGHT_PIN,HIGH)
#define HEAD_LIGHT_OFF()	WRITE(HEAD_LIGHT_PIN,LOW)
#define LASER_GATE_ON()	WRITE(LASER_GATE_PIN,LOW)
#define LASER_GATE_OFF()	WRITE(LASER_GATE_PIN,HIGH)

#define MILL_MOTOR_ON()	 WRITE(MILL_MOTOR_ON_PIN,HIGH)
//#define MILL_MOTOR_OFF() if (IsStopped() || active_extruder!=2) WRITE(MILL_MOTOR_ON_PIN,LOW)
#define MILL_MOTOR_OFF() WRITE(MILL_MOTOR_ON_PIN,LOW)

#define MILL_MOTOR_STATUS()  READ(MILL_MOTOR_ON_PIN)

//#define SERVO1_ON()	if (IsStopped() || active_extruder!=2) WRITE(NOT_SERVO1_ON_PIN,LOW)
#define SERVO1_ON()	WRITE(NOT_SERVO1_ON_PIN,LOW)
//#define SERVO1_OFF()	if (active_extruder!=2) WRITE(NOT_SERVO1_ON_PIN,HIGH)
#define SERVO1_OFF()	WRITE(NOT_SERVO1_ON_PIN,HIGH)

#define SERVO1_STATUS()   !READ(NOT_SERVO1_ON_PIN)

#define SERVO2_ON()	WRITE(NOT_SERVO2_ON_PIN,LOW)
#define SERVO2_OFF()	WRITE(NOT_SERVO2_ON_PIN,HIGH)
#define SERVO2_STATUS()  !READ(NOT_SERVO2_ON_PIN)

//FABtotum fastio definition
// READ(IO); WRITE(IO, v);  TOGGLE(IO) ;  SET_INPUT(IO)  ; SET_OUTPUT(IO);  GET_INPUT(IO) ; GET_OUTPUT(IO) ; GET_TIMER(IO)
#define RASPI_PWR_ON()	        WRITE(NOT_RASPI_PWR_ON_PIN,0)
#define RASPI_PWR_OFF()	        WRITE(NOT_RASPI_PWR_ON_PIN,1)
#define RASPI_PWR_STATUS()      !READ(NOT_RASPI_PWR_ON_PIN)

#define LIGHT_SIGN_ON()	        WRITE(LIGHT_SIGN_ON_PIN,1)
#define LIGHT_SIGN_OFF()	WRITE(LIGHT_SIGN_ON_PIN,0)

#define RPI_RECOVERY_ON()	WRITE(RPI_RECOVERY_PIN,1)
#define RPI_RECOVERY_OFF()	WRITE(RPI_RECOVERY_PIN,0)
#define RPI_RECOVERY_STATUS()   READ(RPI_RECOVERY_PIN)

#define RPI_ERROR_ACK_ON()	WRITE(RPI_RECOVERY_PIN,1)
#define RPI_ERROR_ACK_OFF()	WRITE(RPI_RECOVERY_PIN,0)
#define RPI_ERROR_STATUS()       READ(RPI_RECOVERY_PIN)
#define RASPI_MAX_TURN_OFF_DELAY  3000  //30 seconds, value in tens of ms

#define BEEP_ON()  TCCR0B = (TCCR0B & 0b11111000) | 0x02; analogWrite(BEEPER, 127);
#define BEEP_OFF() TCCR0B = (TCCR0B & 0b11111000) | 0x03; analogWrite(BEEPER, 255);

#define SERVO_SPINDLE_MAX  1832    //(MILL MOTOR input: 1060 us equal to Full CCW, 1460us equal to zero, 1860us equal to Full CW)
#define SERVO_SPINDLE_MIN  1148
#define SERVO_SPINDLE_ZERO  1488
#define SERVO_SPINDLE_ARM  1550

#define RPM_SPINDLE_MAX  14684    // spindle max rpm
#define RPM_SPINDLE_MIN  0     // spindle min rpm

#define WIRE_END_STATUS()      READ(WIRE_END_PIN)

#define	SECURE_SW_STATUS()     !READ(NOT_SECURE_SW_PIN)
#define	REEL_LENS_OPEN_STATUS()     !READ(NOT_REEL_LENS_OPEN_PIN)
#define	DOOR_OPEN_STATUS()     READ(DOOR_OPEN_PIN)

#endif /* FABTOTUM_MACROS_H */
